# The "#" character is a comment character, where anything trailing the "#"
# character will be ignored. This file is meant to provide the text to display
# in the popup when pressing the "Quick help" button.
#
# Please note that if editing this file all spaces are created using the space
# bar and not the tab key, since this text is read and directly used Tkinter
# scrollable Text widget, it is important to maintain proper spacing.
# Indentations will use two spaces.
#
# The maximum column position should be restricted to 145.
#
# Last edited 5/16/2025
#
************
* Overview *
************

  LUNAR/lmp2SYBYLmol2.py is meant to to have a tool to convert any LAMMPS datafile to a SYBYL .mol2 format such that chemical drawing
  or visualization tools such as ChemDraw, Avogadro, VMD, Material Studio, etc may be used open, view and/or modify a LAMMPS simulated molecule
  or system. The intended usage case is to either visualize a molecule/system or to be able to draw in or remove atoms using tools such as
  ChemDraw, Avogadro, VMD, Material Studio, etc. Creating a loop of processing within LUNAR where the sequence would be atom_typing.py ->
  all2lmp.py -> LAMMPS simulation -> lmp2SYBYLmol2.py -> chemical drawing software -> atom_typing.py, for an arbitrary number of cycles. 

**********
* Inputs *
**********

  topofile   
    Button to load in a LAMMPS datafile to convert to a .mol2 file. You may also directly type
    the filename in the entry to the right of the button as well.
            
  parent_directory
    Button to load in a path to the directory where the outputs will be written to. You may also directly type the path in the entry to the 
    right of the button as well. The path can be a full path or relative path or be set to the . (dot character) to write files to the
    location where bond_react_merge.py is currently being run from. Setting parent_directory to "topofile" will use the path of the topofile
    variable to write the files to that location on your machine. The "topofile" shortcut string should be the default usage for 1st time users.

  rm_PBC_bonds
    A drop-down menu to select a Boolean to remove periodic bonds or not remove periodic bonds, where these bonds are determined to be periodic
    via the minimum image convention. If the intended use is to visualize a molecule system in tools such as ChemDraw, Avogadro, VMD, Material
    Studio, etc it may be desired to remove the periodic bonds, which will appear as long bonds spanning the system.
	
  addbox
    A drop-down menu to select a Boolean to add a "pseudo simulation cell" to the written .mol2 file. The "pseudo simulation cell" is added to the
    file by setting the box corners as atoms and the box edges as bonds. The purpose of this option is to allow for the visualization of your model
    in VMD with a simulation cell defined, since VMD does not natively support simulation cells nor does the .mol2 file format. When the atoms are
    written to the .mol2 file the following attributes are set:
      - column1 -> atomID:      incremented atomID
      - column2 -> element:     set as "Bx" (shorthand for Box)
      - column3 -> x:           box corner X-postion
      - column4 -> y:           box corner Y-postion
      - column5 -> z:           box corner Z-postion
      - column6 -> atom type:   set as "Bx" (shorthand for Box)
      - column7 -> subst_id:    set as max(molIDs)+1 (box atoms will always have a molID greater then all other atoms)
      - column8 -> subst_name:  set as "BOX"
      - column9 -> charge:      set as "0.000" as charge is meaningless here
    
    Knowing which attributes are set and how they are set allows you to generate different visualizations in VMD. For example the attribute names
    map onto VMD coloring and selection categories as such:
      subst_id   -> resid
      subst_name -> resname
	  
    As an example, set addbox=True for the default "EXAMPLES/lmp2SYBYLmol2/detda_typed_IFF.data" topofile, run, and look at the bottom of the 
    @<TRIPOS>ATOM and @<TRIPOS>BOND section, to see the "box" atoms and bonds. Then do the following in VMD:
      1. File -> New Molecule -> Browse -> Select "detda_typed_IFF.mol2" file -> Load
      2. Graphics -> Representations  &&  Graphics -> Colors 
         * Which will open both the Representations and Colors dialog boxes
         * In the Representations dialog box do the following:
           * Set Selected atoms as "name C H N", which generates a representation of just the molecule
           * Change the Coloring method to "Type"
           * Change the Drawing method to "CPK"
		   
           * Click "Create rep" to generate another representation Do the following for this representation
             * Set Selected atoms as "resname BOX", which generates a representation of just the atoms/bonds of the box
             * Change the Coloring method to "ResName"
             * Change the Drawing method to "Lines"
			 
          * In the Colors dialog box do the following:
            * Categories -> Type  && Names -> C  && Colors -> black
            * which changes the carbon atoms to color black. Can color the remaining atoms in the same way
			  
            * Categories -> Resname  && Names -> BOX  && Colors -> blue
              * which changes the box atoms to the color blue
              * NOTE: VMD has predefined Resname's and any new resnames that are defined when reading a file are set at the bottom of the list,
                      so you can just assume this and scroll to the bottom of the Names menu, to find "BOX"
					  
    There are a few other ways to generate your representation's, however those are self studies. A few useful entries for the "Selected Atoms"
    box are (in example format, change numbers and letters accoridingly)
      all and x > -12 and y > -12 and z > -12
      resid > 10
      name C O
      mass 5 to 11.5
      index < 10
      within 5 of name H
	
***********
* Buttons *
***********

  Run LUNAR/lmp2SYBYLmol2.py
    A button to run the lmp2SYBYLmol2.py to convert a LAMMPS datafile to a .mol2 file, using all settings defined in the GUI.
	
  Save the current GUI settings as the default GUI settings
    A button to update variables in lmp2SYBYLmol2.py file. Each time the GUI is launched all GUI settings are loaded from the
    lmp2SYBYLmol2.py file. Thus this button creates a method to update the lmp2SYBYLmol2.py file. The CLI also initializes its
    defaults from the variables in the lmp2SYBYLmol2.py, so this button updates the defaults for that run mode as well. Finally, running
    lmp2SYBYLmol2.py from an IDE, the defaults for IDE usage are also set by the variables in the lmp2SYBYLmol2.py file, thus
    this button will also update the defaults for IDE usage.
    
  Quick help
    A button to create a popup for quick help and guidance.

*****************************************************************************
* Please see the "Code: lmp2SYBYLmol2.py" chapter in the official manual    *
* found in the LUNAR/docs folder for further details.                       *
*****************************************************************************