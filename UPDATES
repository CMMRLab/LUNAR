--------------------------------------------
Developers
--------------------------------------------
JDK = Josh Dan Kemppainen (jdkemppa@mtu.edu)


-------------------------------------------------------------------------------------------------------------
Notes for formatting this file
-------------------------------------------------------------------------------------------------------------
- Only spaces will be used to create whitespace (i.e. no tabs)
- The maximum length of each line should be limited to 110 column (i.e. no text should be placed beyound 110)
- Sections of file will be identified by placing header type info between two horizontal lines
- Two empty lines should be placed between sections


-------------------------------------------------------------------------------------------------------------
LUNAR (version 13May2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
10May2024          JDK         - Added UPDATES log
                               - atom_typing: Enforced include_nta_comments boolean for General:N atom types

13May2024          JDK         - GUIs: Added traceback exception handling to GUI log
                               - atom_removal: Added ability to remove atoms based on cluster-size or cluster
                                               mass cutoffs 
                               - log_analysis.py: Changed how "modes" are loaded
                               - log_analysis.py: Added the ability for GUI to write "mode"
                               - log_analysis.py: "Modes" can now be written and loaded
                               - log_analysis.py: Added checkbox to GUI to replace logfile when loading mode 
                               - log_analysis.py: Added minimum/maximum analysis methods
                               - atom_typing.py: Now transfers Velocities
                               - all2lmp.py: Now transfers Velocities
                               - add_pi_electrons.py: Now transfers Velocities
                               - atom_removal.py: Now transfers Velocities
                               - auto_morse_bond_update.py: Now transfers Velocities
                               - bond_react_merge.py: Now transfers Velocities
                               - bond_react_merge.py_prep: Now transfers Velocities
                               - atom_typing.py and all2lmp.py: Added if newfile == ':' the codes will not
                                                                write any output files. This was added for
                                                                those who want to call either main() function
                                                                from within their own python script and return
                                                                objects which contain this info (creates a
                                                                speed up as less time is used on IO).
                               - Updated manual to reflect changes
							   
							   
-------------------------------------------------------------------------------------------------------------
LUNAR (version 16May2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
14May2024          JDK         - auto_morse_bond_update.py GUI: Finished "Quick help" page 

15May2024          JDK         - all2lmp.py: Made "equivs" compatible with new ATOMTYPE:NAME convention
                               - Update examples in EXAMPLES/atom_typing_general/ folder
                               - atom_typing.py: Added "path preserving" general atom types as
                                                * general-pp:2
                                                * general-pp:3
                                                * general-pp:4
                                              which will find all paths between the first neighbor and the
                                              N-th neighbor (N=2,3,4) where the paths are then set in the
                                              general atom type string
                               - Added "automatic_tests" directory where bash scripts will slowly be added
                                 to test each functionality of each code using the CLI to ensure any future
                                 work doesnt break any current features
								 
16May2024          JDK         - add_pi_electrons.py: Pi-electron now inherits velocity from the atom it was
                                                      added to
16May2024          JDK         - log_analysis.py: Now has an intial_guess=<Boolean> option for the hyperbola
                                                  fit


-------------------------------------------------------------------------------------------------------------
LUNAR (version 30May2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
18May2024          JDK         - atom_typing.py: Added command line over rides for bond finding options.

20May2024          JDK         - GUIs: Brought back threading to have GUI run on a seperate thread from the 
                                       main() functions. The threading is also compatible with traceback logs.	

21May2024          JDK         - bond_react_merge_prep.py GUI: Added "Quick help" page	
                   JDK         - add_pi_electrons.py GUI: Added "Quick help" page	
                   JDK         - cluster_analysis.py GUI: Added "Quick help" page
                   JDK         - auto_cluster_analysis.py GUI: Added "Quick help" page	
                   JDK         - lmp2SYBYLmol2.py GUI: Added "Quick help" page	
                   JDK         - atom_removal.py GUI: Added "Quick help" page		
                   JDK         - free_volume.py GUI: Added "Quick help" page
                   JDK         - Added atom_typing.py tests to "automatic_tests" directory		

23May2024          JDK         - Updated "Quick help" pages	

30May2024          JDK         - Updated manual figures of GUIs to inlcude the "Quick help" buttons.	


-------------------------------------------------------------------------------------------------------------
LUNAR (version 11June2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
3June2024          JDK         - all2lmp.py: Added 3-wildcard flag to be remove_things.py to all the ability
                                             to remove any dihedral interactions for IFF's pi-electrons	

4June2024          JDK         - sheet_builder.py: NEW module to generate sheet(s), chiral-tubes, and
                                                   symmetric-multi-wall tubes of sp2 hybridized atoms
                                                   like carbon, nitrogen, boron, .... The module supports
                                                   IFF's virtual pi-electrons for graphene/graphite and boron
                                                   -nitride.

4June2024          JDK         - atom_typing.py: Updated general atom types to use the ':' character instead of
                                                 the ';' character to go between QTY and general string.		

5June2024          JDK         - all2lmp.py: Swithed ff_class 'r' for ReaxFF, to 'i' for interatomic as this
                                             method in all2lmp will allow for the generation of data files 
                                             for interatomic potentials like: ReaxFF, REBO, AIREBO, SNAP, ...
                                             Where SNAP is a machine learned potential.		

6June2024          JDK         - log_analysis.py: Updated that when xlo column in analysis is empty, the 
                                                  minimum xdata is now used and if the xhi column in analysis
                                                   is empty the maximum of xdata is used.	

11June2024          JDK         - cell_builder.py: created a new method which is loosley termed "random",
                                                   which randomly inserts and rotates molecules and then 
                                                   tries to insert the molecule into the systems. Overlaping
                                                   atoms are checked based on a tolerance or via LJ sigma 
                                                   parameters which can be mixed with arithmetic or geometric
                                                   or sixthpower rules. If atoms overlap, the molecule will
                                                   attempt to be inserted again. Users control the maximum
												   number of attempts to insert the molecule. The efficiency
                                                   was tested by generating 32,175 atom EPON 862 systems with
                                                   fully-periodic boundaries and a tolerance of 2.0 angstrom:
                                                      *Packed to: 0.10 gm/cm^3 in 19 seconds
                                                      *Packed to: 0.20 gm/cm^3 in 35 seconds
                                                      *Packed to: 0.30 gm/cm^3 in 1 minute 18 seconds
                                                      *Packed to: 0.40 gm/cm^3 in 4 minutes and 12 seconds
                                                      *Packed to: 0.50 gm/cm^3 in 39 minutes and 14 seconds
                                                   and by generating 32,175 atom EPON 862 systems with non
                                                   -periodic boundaries and a tolerance of 2.0 angstrom:
                                                      *Packed to: 0.10 gm/cm^3 in 3 seconds
                                                      *Packed to: 0.20 gm/cm^3 in 7 seconds
                                                      *Packed to: 0.30 gm/cm^3 in 24 seconds
                                                      *Packed to: 0.40 gm/cm^3 in 58 seconds
                                                      *Packed to: 0.50 gm/cm^3 in 12 minutes and 25 seconds
                                                   Currently, the manual found in the docs/ directory is not
                                                   updated with these new options, but the "Quick help" guide,
                                                   the IDE comments, and the commandline manual (accessible
                                                   by python3 cell_builder.py -man) are updated.												   
							  
