--------------------------------------------
Developers
--------------------------------------------
JDK = Josh Dan Kemppainen (jdkemppa@mtu.edu)


-------------------------------------------------------------------------------------------------------------
Notes for formatting this file
-------------------------------------------------------------------------------------------------------------
- Only spaces will be used to create whitespace (i.e. no tabs)
- The maximum length of each line should be limited to 110 column (i.e. no text should be placed beyound 110)
- Sections of file will be identified by placing header type info between two horizontal lines
- Two empty lines should be placed between sections


-------------------------------------------------------------------------------------------------------------
LUNAR (version 13May2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
10May2024          JDK         - Added UPDATES log
                               - atom_typing: Enforced include_nta_comments boolean for General:N atom types

13May2024          JDK         - GUIs: Added traceback exception handling to GUI log
                               - atom_removal: Added ability to remove atoms based on cluster-size or cluster
                                               mass cutoffs 
                               - log_analysis.py: Changed how "modes" are loaded
                               - log_analysis.py: Added the ability for GUI to write "mode"
                               - log_analysis.py: "Modes" can now be written and loaded
                               - log_analysis.py: Added checkbox to GUI to replace logfile when loading mode 
                               - log_analysis.py: Added minimum/maximum analysis methods
                               - atom_typing.py: Now transfers Velocities
                               - all2lmp.py: Now transfers Velocities
                               - add_pi_electrons.py: Now transfers Velocities
                               - atom_removal.py: Now transfers Velocities
                               - auto_morse_bond_update.py: Now transfers Velocities
                               - bond_react_merge.py: Now transfers Velocities
                               - bond_react_merge.py_prep: Now transfers Velocities
                               - atom_typing.py and all2lmp.py: Added if newfile == ':' the codes will not
                                                                write any output files. This was added for
                                                                those who want to call either main() function
                                                                from within their own python script and return
                                                                objects which contain this info (creates a
                                                                speed up as less time is used on IO).
                               - Updated manual to reflect changes
							   
							   
-------------------------------------------------------------------------------------------------------------
LUNAR (version 16May2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
14May2024          JDK         - auto_morse_bond_update.py GUI: Finished "Quick help" page 

15May2024          JDK         - all2lmp.py: Made "equivs" compatible with new ATOMTYPE:NAME convention
                               - Update examples in EXAMPLES/atom_typing_general/ folder
                               - atom_typing.py: Added "path preserving" general atom types as
                                                * general-pp:2
                                                * general-pp:3
                                                * general-pp:4
                                              which will find all paths between the first neighbor and the
                                              N-th neighbor (N=2,3,4) where the paths are then set in the
                                              general atom type string
                               - Added "automatic_tests" directory where bash scripts will slowly be added
                                 to test each functionality of each code using the CLI to ensure any future
                                 work doesnt break any current features
								 
16May2024          JDK         - add_pi_electrons.py: Pi-electron now inherits velocity from the atom it was
                                                      added to
16May2024          JDK         - log_analysis.py: Now has an intial_guess=<Boolean> option for the hyperbola
                                                  fit


-------------------------------------------------------------------------------------------------------------
LUNAR (version 30May2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
18May2024          JDK         - atom_typing.py: Added command line over rides for bond finding options.

20May2024          JDK         - GUIs: Brought back threading to have GUI run on a seperate thread from the 
                                       main() functions. The threading is also compatible with traceback logs.	

21May2024          JDK         - bond_react_merge_prep.py GUI: Added "Quick help" page	
                   JDK         - add_pi_electrons.py GUI: Added "Quick help" page	
                   JDK         - cluster_analysis.py GUI: Added "Quick help" page
                   JDK         - auto_cluster_analysis.py GUI: Added "Quick help" page	
                   JDK         - lmp2SYBYLmol2.py GUI: Added "Quick help" page	
                   JDK         - atom_removal.py GUI: Added "Quick help" page		
                   JDK         - free_volume.py GUI: Added "Quick help" page
                   JDK         - Added atom_typing.py tests to "automatic_tests" directory		

23May2024          JDK         - Updated "Quick help" pages	

30May2024          JDK         - Updated manual figures of GUIs to inlcude the "Quick help" buttons.	


-------------------------------------------------------------------------------------------------------------
LUNAR (version 17June2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
3June2024          JDK         - all2lmp.py: Added 3-wildcard flag to be remove_things.py to all the ability
                                             to remove any dihedral interactions for IFF's pi-electrons	

4June2024          JDK         - sheet_builder.py: NEW module to generate sheet(s), chiral-tubes, and
                                                   symmetric-multi-wall tubes of sp2 hybridized atoms
                                                   like carbon, nitrogen, boron, .... The module supports
                                                   IFF's virtual pi-electrons for graphene/graphite and boron
                                                   -nitride.

4June2024          JDK         - atom_typing.py: Updated general atom types to use the ':' character instead of
                                                 the ';' character to go between QTY and general string.		

5June2024          JDK         - all2lmp.py: Swithed ff_class 'r' for ReaxFF, to 'i' for interatomic as this
                                             method in all2lmp will allow for the generation of data files 
                                             for interatomic potentials like: ReaxFF, REBO, AIREBO, SNAP, ...
                                             Where SNAP is a machine learned potential.		

6June2024          JDK         - log_analysis.py: Updated that when xlo column in analysis is empty, the 
                                                  minimum xdata is now used and if the xhi column in analysis
                                                  is empty the maximum of xdata is used.	

15June2024         JDK         - cell_builder.py: Created a new method which is loosley termed "random",
                                                  which tries to randomly insert and rotates molecules. 
                                                  Overlaping atoms are checked based on a tolerance or via
                                                  LJ sigma parameters which can be mixed with arithmetic or
                                                  geometric or sixthpower rules. If atoms overlap, the 
                                                  molecule will attempt to be inserted again. Users control
                                                  the maximum number of attempts to insert the molecule. The
                                                  efficiency was tested by generating 32,175 atom EPON 862
                                                  systems with fully-periodic boundaries and a tolerance of
                                                  2.0 angstrom:
                                                      *Packed to: 0.10 gm/cm^3 in 4 seconds
                                                      *Packed to: 0.20 gm/cm^3 in 8 seconds
                                                      *Packed to: 0.30 gm/cm^3 in 22 seconds
                                                      *Packed to: 0.40 gm/cm^3 in 24 seconds
                                                      *Packed to: 0.50 gm/cm^3 in 2 minutes and 48 seconds
                                                      *Packed to: 0.57 gm/cm^3 in 25 minutes and 40 seconds
                                                  and by generating 32,175 atom EPON 862 systems with non
                                                  -periodic boundaries and a tolerance of 2.0 angstrom:
                                                      *Packed to: 0.10 gm/cm^3 in 4 seconds
                                                      *Packed to: 0.20 gm/cm^3 in 7 seconds
                                                      *Packed to: 0.30 gm/cm^3 in 25 seconds
                                                      *Packed to: 0.40 gm/cm^3 in 52 seconds
                                                      *Packed to: 0.50 gm/cm^3 in 11 minutes and 18 seconds	
                                                  Currently, the manual found in the docs/ directory is not
                                                  updated with these new options, but the "Quick help" guide,
                                                  the IDE comments, and the commandline manual (accessible
                                                  by python3 cell_builder.py -man) are updated.	

16June2024         JDK         - cell_builder.py: Increased the efficiency of the "random" packing method.
                                                  the new efficiency was tested by generating 32,175 atom EPON
                                                  862 systems with fully-periodic boundaries and a tolerance
                                                  of 2.0 angstrom:
                                                      *Packed to: 0.10 gm/cm^3 in 3 seconds
                                                      *Packed to: 0.20 gm/cm^3 in 3 seconds
                                                      *Packed to: 0.30 gm/cm^3 in 3 seconds
                                                      *Packed to: 0.40 gm/cm^3 in 8 seconds
                                                      *Packed to: 0.50 gm/cm^3 in 48 seconds
                                                      *Packed to: 0.57 gm/cm^3 in 9 minutes and 45 seconds
                                                  and by generating 32,175 atom EPON 862 systems with non
                                                  -periodic boundaries and a tolerance of 2.0 angstrom:
                                                      *Packed to: 0.10 gm/cm^3 in 2 seconds
                                                      *Packed to: 0.20 gm/cm^3 in 2 seconds
                                                      *Packed to: 0.30 gm/cm^3 in 4 seconds
                                                      *Packed to: 0.40 gm/cm^3 in 18 seconds
                                                      *Packed to: 0.50 gm/cm^3 in 4 minutes and 49 seconds	

17June2024         JDK         - cell_builder.py: Increased the efficiency of the "random" packing method.
                                                  the new efficiency was tested by generating 32,175 atom EPON
                                                  862 systems with fully-periodic boundaries and a tolerance
                                                  of 2.0 angstrom:
                                                      *Packed to: 0.10 gm/cm^3 in 3 seconds
                                                      *Packed to: 0.20 gm/cm^3 in 2 seconds
                                                      *Packed to: 0.30 gm/cm^3 in 2 seconds
                                                      *Packed to: 0.40 gm/cm^3 in 4 seconds
                                                      *Packed to: 0.50 gm/cm^3 in 10 seconds
                                                      *Packed to: 0.60 gm/cm^3 in 1 minute and 17 seconds
                                                      *Packed to: 0.70 gm/cm^3 in 22 minutes and 36 seconds
                                                  and by generating 32,175 atom EPON 862 systems with non
                                                  -periodic boundaries and a tolerance of 2.0 angstrom:
                                                      *Packed to: 0.10 gm/cm^3 in 3 seconds
                                                      *Packed to: 0.20 gm/cm^3 in 2 seconds
                                                      *Packed to: 0.30 gm/cm^3 in 2 seconds
                                                      *Packed to: 0.40 gm/cm^3 in 5 seconds
                                                      *Packed to: 0.50 gm/cm^3 in 28 seconds
                                                      *Packed to: 0.60 gm/cm^3 in 6 minute and 16 seconds	

17June2024         JDK         - sheet_builder.py: Increased the efficiency for finding bonds (used some
                                                   of the tricks found while optimizing the cell_builder 
                                                   "random" method).			

-------------------------------------------------------------------------------------------------------------
LUNAR (version 30June2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
18June2024         JDK         - LUNAR.py: Made LUNAR.py compatible with the new cell_builder.py.

18June2024         JDK         - atom_typing.py: Corrected a typo in the "Quick help" page.	

26June2024         JDK         - atom_typing.py and all2lmp.py: Updated mol2lmp.py to be able to read .mol
                                                                files in V2000 or V3000 format.	

26June2024         JDK         - atom_typing.py: Adjusted velocity transfer bug.

27June2024         JDK         - LUNAR.py: LUNAR manuscript was published so updated README.md and citation
                                           page in LUNAR.py GUI.		

27June2024         JDK         - src/read_lmp.py: Bug fix for when reading a LAMMPS datafile with an "empty
                                                  section", for example an "Improper Coeffs" section that
                                                  no improper coeffs are supplied.	

27June2024         JDK         - bond_react_merge.py: Updated the "in.fix_bond_react.script" that is written
                                                      each time the code is run to include a more scalable
                                                      example of how to write LAMMPS datafiles out in
                                                      increments of conversion.		

29June2024         JDK         - bond_react_merge.py: Fixed "-wrd" command line override shortcut flag.	

30June2024         JDK         - cell_builder.py: Made compatible with ReaxFF datafiles or other "interatomic"
                                                  potential types of LAMMPS datafiles.	

-------------------------------------------------------------------------------------------------------------
LUNAR (version 26July2024)

Date               Developer   Description
-------------------------------------------------------------------------------------------------------------
2July2024          JDK         - bond_react_merge.py and cell_builder.py with force_field_joining = 'merge':
                                 Fixed the issue of writing crossterms with ZERO's for class1 FFs, that dont
                                 have crossterm interations, such as the non-crossterm version of CVFF, OLSA,
                                 DREIDING, etc.	

3July2024          JDK         - cell_builder.py: For the "random" method, the compute density pop-up in the
                                                  GUI was added onto, to allow for the insertion of the cell
                                                  dimensions to the "domain" entry via the click of a button.

3July2024          JDK         - README.md: Generated a YouTube channel for LUNAR and added the "Additional
                                            resources" to README.md.	

7July2024          JDK         - bond_react_merge.py: Added an additional sort to bond coeffs to mitigate the
                                                      number of permuations to arise. This elimanates order
                                                      inputs vs outputs coupling.	

7July2024          JDK         - auto_morse_bond_update.py:	Added H-* bonding parameters in
                                                            frc_files/Morse_parameters.txt and cleaned up the
                                                            format.					

17July2024         JDK         - auto_morse_bond_update.py:	Added F-* bonding parameters in
                                                            frc_files/Morse_parameters.txt.
															
19July2024         JDK         - atom_typing.py auto_morse_bond_update.py: Increased efficiency of the ring
                                                                           analysis path finding code as it
                                                                           proved to be slow for MXenes.
																		   
22July2024         JDK         - bond_react_merge.py: Fixed typo for map file generation of WARNING, for
                                                      DeleteID auto-detection.	
													  
26July2024         JDK         - sheet_builder.py: Fixed typo in "GUI Quick help page".